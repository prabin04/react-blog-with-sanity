[{"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\index.js":"1","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\App.js":"2","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\components\\OnePost.js":"4","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\components\\AllPosts.js":"5","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\client.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":378,"mtime":1607452432401,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2452,"mtime":1607596798852,"results":"11","hashOfConfig":"8"},{"size":1823,"mtime":1609959637514,"results":"12","hashOfConfig":"8"},{"size":133,"mtime":1607453196678,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"v3fss1",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\index.js",[],["28","29"],"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\App.js",[],"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\components\\OnePost.js",[],"C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\components\\AllPosts.js",["30"],"import React, {useEffect, useState} from 'react'\r\nimport sanityClient from '../client.js'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function AllPosts()  {\r\n    const [allPostsData, setAllPosts] = useState(null)\r\n\r\n    useEffect(() =>{\r\n        sanityClient.fetch(\r\n            `*[_type == \"post\"]{\r\n                title,\r\n                slug,\r\n                mainImage{\r\n                    asset->{\r\n                        _id,\r\n                        url\r\n                    }\r\n                }\r\n            }`\r\n            )\r\n            .then((data) => setAllPosts(data))\r\n            .catch(console.error)\r\n    }, [])\r\n    return (\r\n        <div className=\"bg-green-100 min-h-screen p-12\">\r\n        <div className=\"container mx-auto\">\r\n            <h2 className=\"text-5xl flex mb-12 justify-center\"> Blog Posts!</h2>\r\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n                {allPostsData &&\r\n                allPostsData.map((post,index)=>\r\n                    <Link to={'/' + post.slug.current}>\r\n                    <span className=\"blockbg-white block h-64 relative rounded shadow leading-snug border-l-8 border-green-800\" key={index}>\r\n                        <img\r\n                        className=\"w-full h-full rounded-r object-cover absolute\"\r\n                         src={post.mainImage.asset.url} alt=\"main hero image for blog post\"/>\r\n                     <span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\r\n                        <h2 className=\"text-gray-800 text-lg font-bold px-3 py-4 bg-red-700 text-red-100 bg-opacity-75 rounded\">{post.title}</h2>\r\n                    </span>\r\n                    </span>\r\n                    </Link>\r\n                )}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\xampp\\htdocs\\react_blog_with_sanity\\src\\client.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":33,"column":25,"nodeType":"37","endLine":35,"endColumn":94},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]